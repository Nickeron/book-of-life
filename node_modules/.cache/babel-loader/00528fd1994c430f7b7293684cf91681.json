{"ast":null,"code":"import server from \"../apis/server\";\nimport { IMPORT_IMAGE, DELETE_IMAGE, EDIT_TEXT, FETCH_QUIZ_DATA, FETCH_EXP_DATA, SIGN_IN, SIGN_OUT } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const importImage = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await server.post('/images', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: IMPORT_IMAGE,\n      payload: response.data\n    });\n  };\n};\nexport const deleteImage = id => {\n  return async dispatch => {\n    await server.delete(`/images/${id}`);\n    dispatch({\n      type: DELETE_IMAGE,\n      payload: id\n    });\n  };\n};\nexport const fetchQuizData = id => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await server.get(`/quiz?userID=${userId}&subjectID=${id}`);\n    console.log(response.data[0].subjects[0].items);\n    dispatch({\n      type: FETCH_QUIZ_DATA,\n      payload: response.data[0].subjects[0].items\n    });\n  };\n};\nexport const fetchExpandedData = id => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await server.get(`/exp?id=${userId}&id=${id}`);\n    dispatch({\n      type: FETCH_EXP_DATA,\n      payload: response.data\n    });\n  };\n};\nexport const editText = (id, formValues) => {\n  return async dispatch => {\n    const response = await server.put(`/text/${id}`, formValues);\n    dispatch({\n      type: EDIT_TEXT,\n      payload: response.data\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/George Tsokos/React Projects/book_of_life/src/actions/index.js"],"names":["server","IMPORT_IMAGE","DELETE_IMAGE","EDIT_TEXT","FETCH_QUIZ_DATA","FETCH_EXP_DATA","SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut","importImage","formValues","dispatch","getState","auth","response","post","data","deleteImage","id","delete","fetchQuizData","get","console","log","subjects","items","fetchExpandedData","editText","put"],"mappings":"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","sourcesContent":["import server from \"../apis/server\";\r\nimport { IMPORT_IMAGE, DELETE_IMAGE, EDIT_TEXT,\tFETCH_QUIZ_DATA, FETCH_EXP_DATA, SIGN_IN, SIGN_OUT } from \"./types\";\r\n\r\nexport const signIn = userId => \r\n{\r\n\treturn {\r\n\t  type: SIGN_IN,\r\n\t  payload: userId\r\n\t};\r\n};\r\n  \r\nexport const signOut = () => \r\n{\r\n\treturn { type: SIGN_OUT\t};\r\n};\r\n\r\nexport const importImage = formValues =>\r\n{\r\n\treturn async (dispatch, getState) => \r\n\t{\r\n\t\tconst { userId } = getState().auth;\r\n\t\tconst response = await server.post('/images', {...formValues, userId} );\r\n\r\n\t\tdispatch({ type: IMPORT_IMAGE, payload: response.data});\r\n\t};\r\n};\r\n\r\nexport const deleteImage = id =>\r\n{\r\n\treturn async dispatch => \r\n\t{\r\n\t\tawait server.delete(`/images/${id}`);\r\n\r\n\t\tdispatch({ type: DELETE_IMAGE, payload: id});\r\n\t};\r\n};\r\n\r\n\r\nexport const fetchQuizData = id =>\r\n{\r\n\treturn async (dispatch, getState) => \r\n\t{\r\n\t\tconst { userId } = getState().auth;\r\n\t\tconst response = await server.get(`/quiz?userID=${userId}&subjectID=${id}`);\r\n\t\tconsole.log(response.data[0].subjects[0].items);\r\n\r\n\t\tdispatch({ type: FETCH_QUIZ_DATA, payload: response.data[0].subjects[0].items});\r\n\t};\r\n};\r\n\r\nexport const fetchExpandedData = id =>\r\n{\r\n\treturn async (dispatch, getState) => \r\n\t{\r\n\t\tconst { userId } = getState().auth;\r\n\t\tconst response = await server.get(`/exp?id=${userId}&id=${id}`);\r\n\r\n\t\tdispatch({ type: FETCH_EXP_DATA, payload: response.data});\r\n\t};\r\n};\r\n\r\nexport const editText = (id, formValues) =>\r\n{\r\n\treturn async dispatch => \r\n\t{\r\n\t\tconst response = await server.put(`/text/${id}`, formValues);\r\n\r\n\t\tdispatch({ type: EDIT_TEXT, payload: response.data});\r\n\t};\r\n}"]},"metadata":{},"sourceType":"module"}