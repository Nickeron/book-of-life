{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass Authentication extends React.Component {\n  componentDidMount() {\n    // TODO: Implement proper authentication through the \n    this.auth = {\n      currentUser: {\n        get: () => {\n          return {\n            getId: () => {\n              return {\n                userId: \"007\"\n              };\n            }\n          };\n        }\n      }\n    };\n    this.auth.signIn();\n    console.log(this.auth); // Google Authentication\n\n    /* window.gapi.load('client:auth2', () => \r\n    {\r\n      window.gapi.client\r\n    \t.init({\r\n    \t  clientId:\r\n    \t\t'797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\r\n    \t  scope: 'email'\r\n    \t})\r\n    \t.then(() => {\r\n    \t  this.auth = window.gapi.auth2.getAuthInstance();\r\n    \n    \t  this.onAuthChange(this.auth.isSignedIn.get());\r\n    \t  this.auth.isSignedIn.listen(this.onAuthChange);\r\n    \t});\r\n    }); */\n  }\n  /* \tonSignInClick = () => {\tthis.auth.signIn();\t};\r\n  \r\n  \tonSignOutClick = () => { this.auth.signOut(); }; */\n\n\n  render() {\n    return null;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(Authentication);","map":{"version":3,"sources":["C:/Users/George Tsokos/React Projects/book_of_life/src/components/Authentication.js"],"names":["React","connect","signIn","signOut","Authentication","Component","componentDidMount","auth","currentUser","get","getId","userId","console","log","render","mapStateToProps","state","isSignedIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CACA;AACCC,EAAAA,iBAAiB,GACjB;AACC;AACA,SAAKC,IAAL,GACA;AACCC,MAAAA,WAAW,EAAE;AACZC,QAAAA,GAAG,EAAE,MACL;AACC,iBAAO;AACNC,YAAAA,KAAK,EAAE,MACP;AACC,qBAAO;AACNC,gBAAAA,MAAM,EAAE;AADF,eAAP;AAGA;AANK,WAAP;AAQA;AAXW;AADd,KADA;AAiBA,SAAKJ,IAAL,CAAUL,MAAV;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,IAAjB,EArBD,CAuBC;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAEF;AACA;AACA;;;AAECO,EAAAA,MAAM,GACN;AACC,WAAO,IAAP;AACA;;AAlDF;;AAqDA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAE,SAAO;AAAEC,IAAAA,UAAU,EAAED,KAAK,CAACT,IAAN,CAAWU;AAAzB,GAAP;AAA+C,CAAlF;;AAEA,eAAehB,OAAO,CAAEc,eAAF,EAAmB;AAAEb,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,CAAP,CAA+CC,cAA/C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass Authentication extends React.Component \r\n{\r\n\tcomponentDidMount() \r\n\t{\r\n\t\t// TODO: Implement proper authentication through the \r\n\t\tthis.auth = \r\n\t\t{\r\n\t\t\tcurrentUser: {\r\n\t\t\t\tget: () => \r\n\t\t\t\t{\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tgetId: () => \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tuserId: \"007\"\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.auth.signIn();\r\n\r\n\t\tconsole.log(this.auth);\r\n\r\n\t\t// Google Authentication\r\n\t\t/* window.gapi.load('client:auth2', () => \r\n\t\t{\r\n\t\t  window.gapi.client\r\n\t\t\t.init({\r\n\t\t\t  clientId:\r\n\t\t\t\t'797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\r\n\t\t\t  scope: 'email'\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t  this.auth = window.gapi.auth2.getAuthInstance();\r\n\t\r\n\t\t\t  this.onAuthChange(this.auth.isSignedIn.get());\r\n\t\t\t  this.auth.isSignedIn.listen(this.onAuthChange);\r\n\t\t\t});\r\n\t\t}); */\r\n\t}\r\n\r\n/* \tonSignInClick = () => {\tthis.auth.signIn();\t};\r\n\r\n\tonSignOutClick = () => { this.auth.signOut(); }; */\r\n\r\n\trender()\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => { return { isSignedIn: state.auth.isSignedIn }; };\r\n  \r\nexport default connect( mapStateToProps, { signIn, signOut })(Authentication);\r\n  "]},"metadata":{},"sourceType":"module"}