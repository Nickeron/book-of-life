{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass Authentication extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    // TODO: Implement proper authentication through the \n    this.props.isSignedIn = true;\n    this.auth = {\n      isSignedIn: true,\n      id\n    }; // Google Authentication\n\n    /* window.gapi.load('client:auth2', () => \r\n    {\r\n      window.gapi.client\r\n    \t.init({\r\n    \t  clientId:\r\n    \t\t'797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\r\n    \t  scope: 'email'\r\n    \t})\r\n    \t.then(() => {\r\n    \t  this.auth = window.gapi.auth2.getAuthInstance();\r\n    \n    \t  this.onAuthChange(this.auth.isSignedIn.get());\r\n    \t  this.auth.isSignedIn.listen(this.onAuthChange);\r\n    \t});\r\n    }); */\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(Authentication);","map":{"version":3,"sources":["C:/Users/George Tsokos/React Projects/book_of_life/src/components/Authentication.js"],"names":["React","connect","signIn","signOut","Authentication","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","id","render","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CACA;AAAA;AAAA;;AAAA,SAyBCC,YAzBD,GAyBgBC,UAAU,IACzB;AACC,UAAIA,UAAJ,EACA;AACC,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACA,OAHD,MAKA;AACC,aAAKJ,KAAL,CAAWL,OAAX;AACA;AACD,KAnCF;;AAAA,SAqCCU,aArCD,GAqCiB,MAAM;AAAE,WAAKJ,IAAL,CAAUP,MAAV;AAAqB,KArC9C;;AAAA,SAuCCY,cAvCD,GAuCkB,MAAM;AAAE,WAAKL,IAAL,CAAUN,OAAV;AAAsB,KAvChD;AAAA;;AACCY,EAAAA,iBAAiB,GACjB;AACC;AACA,SAAKP,KAAL,CAAWD,UAAX,GAAwB,IAAxB;AACA,SAAKE,IAAL,GAAY;AAAEF,MAAAA,UAAU,EAAE,IAAd;AAAoBS,MAAAA;AAApB,KAAZ,CAHD,CAKC;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAkBDC,EAAAA,MAAM,GACN;AACC,WAAO,IAAP;AACA;;AA5CF;;AA+CA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAE,SAAO;AAAEZ,IAAAA,UAAU,EAAEY,KAAK,CAACV,IAAN,CAAWF;AAAzB,GAAP;AAA+C,CAAlF;;AAEA,eAAeN,OAAO,CAAEiB,eAAF,EAAmB;AAAEhB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,CAAP,CAA+CC,cAA/C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass Authentication extends React.Component \r\n{\r\n\tcomponentDidMount() \r\n\t{\r\n\t\t// TODO: Implement proper authentication through the \r\n\t\tthis.props.isSignedIn = true;\r\n\t\tthis.auth = { isSignedIn: true, id}\r\n\r\n\t\t// Google Authentication\r\n\t\t/* window.gapi.load('client:auth2', () => \r\n\t\t{\r\n\t\t  window.gapi.client\r\n\t\t\t.init({\r\n\t\t\t  clientId:\r\n\t\t\t\t'797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\r\n\t\t\t  scope: 'email'\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t  this.auth = window.gapi.auth2.getAuthInstance();\r\n\t\r\n\t\t\t  this.onAuthChange(this.auth.isSignedIn.get());\r\n\t\t\t  this.auth.isSignedIn.listen(this.onAuthChange);\r\n\t\t\t});\r\n\t\t}); */\r\n\t}\r\n\t\r\n\tonAuthChange = isSignedIn => \r\n\t{\r\n\t\tif (isSignedIn) \r\n\t\t{\r\n\t\t\tthis.props.signIn(this.auth.currentUser.get().getId());\r\n\t\t} \r\n\t\telse \r\n\t\t{\r\n\t\t\tthis.props.signOut();\r\n\t\t}\r\n\t};\r\n\r\n\tonSignInClick = () => {\tthis.auth.signIn();\t};\r\n\r\n\tonSignOutClick = () => { this.auth.signOut(); };\r\n\r\n\trender()\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => { return { isSignedIn: state.auth.isSignedIn }; };\r\n  \r\nexport default connect( mapStateToProps, { signIn, signOut })(Authentication);\r\n  "]},"metadata":{},"sourceType":"module"}